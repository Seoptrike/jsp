/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-03 12:00:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class comments_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/data/jsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ex04/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1714458788072L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	#imgCphoto{\r\n");
      out.write("		border-radius:50%;\r\n");
      out.write("		border : 1px solid black;\r\n");
      out.write("	}\r\n");
      out.write("	#delete,#update{\r\n");
      out.write("	 	cursor:pointer;\r\n");
      out.write("	 	font-size:25px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"mt-5 text-end\" id=\"div_insert\">\r\n");
      out.write("	<textarea id=\"contents\" rows=\"5\" class=\"form-control\" placeholder=\"댓글 내용을 입력하세요.\"></textarea>\r\n");
      out.write("	<button class=\"btn btn-dark px-5 mt-2 insert\">등록</button>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"mt-5\" id=\"div_login\">\r\n");
      out.write("	<button class=\"btn btn-success w-100\">로그인</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"card-body\">\r\n");
      out.write("	<div id= \"div_comments\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"pagination\" class=\"pagination justify-content-center mt-5\"></div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "modal_update.jsp", out, false);
      out.write("\r\n");
      out.write("<script id=\"temp_comments\" type=\"x-handlebars-template\">\r\n");
      out.write("\r\n");
      out.write("	{{#each .}}\r\n");
      out.write("		<div class=\"row mt-5\">\r\n");
      out.write("			<div class=\"col-2\">\r\n");
      out.write("				<img id=\"imgCphoto\" width=80 height=80 src=\"{{photo}}\"/>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-10\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col\">\r\n");
      out.write("						<span><b>{{cid}}</b> :</span>\r\n");
      out.write("						<span>{{writer}}</span>\r\n");
      out.write("						<span>{{cdate}}</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"col text-end\"></span>\r\n");
      out.write("						<span><i class=\"bi bi-pencil-square update\" style=\"{{update writer}}\"></i>	\r\n");
      out.write("						<span><i class=\"bi bi-trash3 ms-3 delete\" style=\"{{delete writer}}\" cid=\"{{cid}}\"></i></span>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"row mt-3\">\r\n");
      out.write("					<div class=\"mb-3 ellipsis2\">:{{contents}}</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("	Handlebars.registerHelper(\"delete\",function(writer){\r\n");
      out.write("		if(uid!=writer){\r\n");
      out.write("			return \"display:none\";\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	Handlebars.registerHelper(\"update\",function(writer){\r\n");
      out.write("		if(uid!=writer){\r\n");
      out.write("			return \"display:none\";\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	const bid= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bbs.bid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	let page=1;\r\n");
      out.write("	let size=3;\r\n");
      out.write("	if(uid){\r\n");
      out.write("		$(\"#div_insert\").show();\r\n");
      out.write("		$(\"#div_login\").hide();		\r\n");
      out.write("	}else{\r\n");
      out.write("		$(\"#div_insert\").hide();\r\n");
      out.write("		$(\"#div_login\").show();	\r\n");
      out.write("	}\r\n");
      out.write("	//수정 버튼을 클릭한 경우\r\n");
      out.write("	$(\"#div_comments\").on(\"click\",\".update\",function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/com/read\",\r\n");
      out.write("			success:function(){\r\n");
      out.write("				$(\"#modalUpdate\").modal(\"show\");\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	//삭제 버튼을 클릭한 경우\r\n");
      out.write("	$(\"#div_comments\").on(\"click\",\".delete\", function(){\r\n");
      out.write("		const cid=$(this).attr(\"cid\");\r\n");
      out.write("		if(confirm(cid+ \" 번 댓글을 삭제하실래요?\")){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				url:\"/com/delete\",\r\n");
      out.write("				data:{cid},\r\n");
      out.write("				success:function(){\r\n");
      out.write("					alert(\"삭제완료!\")\r\n");
      out.write("					getTotal();\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	//로그인 버튼을 클릭한 경우\r\n");
      out.write("	$(\"#div_login\").on(\"click\",function(){\r\n");
      out.write("		sessionStorage.setItem(\"target\", \"/bbs/read?bid=\" + bid);\r\n");
      out.write("		location.href=\"/user/login\";\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	// 등록 버튼을 클릭한 경우\r\n");
      out.write("	\r\n");
      out.write("	$(\"#div_insert\").on(\"click\", \".insert\", function(){\r\n");
      out.write("		const contents=$(\"#contents\").val();\r\n");
      out.write("		if(contents==\"\"){\r\n");
      out.write("			alert(\"댓글내용을 입력하세요!\");\r\n");
      out.write("			$(\"#contents\").focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}else{\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"post\",\r\n");
      out.write("			url:\"/com/insert\",\r\n");
      out.write("			data:{bid, contents, uid},\r\n");
      out.write("			success:function(){\r\n");
      out.write("				page=1;\r\n");
      out.write("				getTotal();\r\n");
      out.write("				contents=$(\"#contents\").val(\"\");\r\n");
      out.write("			}	\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	getData();\r\n");
      out.write("	function getData(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/com/list.json\",\r\n");
      out.write("			data:{bid, page, size},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				const temp=Handlebars.compile($(\"#temp_comments\").html());\r\n");
      out.write("				$(\"#div_comments\").html(temp(data));\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	getTotal();\r\n");
      out.write("	function getTotal(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			data:{bid},\r\n");
      out.write("			url:\"/com/total\",\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				const totalPage=Math.ceil(data/size);\r\n");
      out.write("				$(\"#pagination\").twbsPagination(\"changeTotalPages\", totalPage, page);\r\n");
      out.write("				$(\"#total\").html(\"댓글수:\" + data + \"건\")\r\n");
      out.write("				}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	 $('#pagination').twbsPagination({\r\n");
      out.write("	      totalPages:100, \r\n");
      out.write("	      visiblePages: 5, \r\n");
      out.write("	      startPage : 1,\r\n");
      out.write("	      initiateStartPageClick: false, \r\n");
      out.write("	      first:'<i class=\"bi bi-chevron-double-left text-dark\"></i>', \r\n");
      out.write("	      prev :'<i class=\"bi bi-chevron-left text-dark\"></i>',\r\n");
      out.write("	      next :'<i class=\"bi bi-chevron-right text-dark\"></i>',\r\n");
      out.write("	      last :'<i class=\"bi bi-chevron-double-right text-dark\"></i>',\r\n");
      out.write("	      onPageClick: function (event, clickPage) {\r\n");
      out.write("	          page=clickPage; \r\n");
      out.write("	          getData();\r\n");
      out.write("	      }\r\n");
      out.write("	   });\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
