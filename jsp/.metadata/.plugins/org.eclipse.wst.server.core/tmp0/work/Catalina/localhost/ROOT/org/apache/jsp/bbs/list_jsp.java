/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-03 09:47:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/data/jsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ex04/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1714458788072L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<Style>\r\n");
      out.write("	#page-link { color: black ; }\r\n");
      out.write("</Style>    \r\n");
      out.write("    \r\n");
      out.write("<div>\r\n");
      out.write("	<h1>자유게시판</h1> \r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("<div class=\"row mt-2\">\r\n");
      out.write("    <div class=\"col-6 col-md-4\">\r\n");
      out.write("        <form name=\"frm\">\r\n");
      out.write("            <div class=\"input-group\">\r\n");
      out.write("                <select class=\"mx-1\" name=\"key\" id=\"select\">\r\n");
      out.write("                    <option value=\"title\">제목</option>\r\n");
      out.write("                    <option value=\"contents\">내용</option>\r\n");
      out.write("                    <option value=\"writer\">작성자</option>\r\n");
      out.write("                </select>\r\n");
      out.write("                <input class=\"form-control\" id=\"query\" name=\"query\" placeholder=\"검색어를 입력하세요\"><button class=\"mx-1 btn btn-success\">검색</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"col text-end mb-3\" id=\"div_write\" style=\"display: none\">\r\n");
      out.write("        <a href=\"/bbs/insert\"><button class=\"btn btn-success\">글쓰기</button></a>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("	<div id=\"div_bbs\"></div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"pagination\" class=\"pagination justify-content-center mt-5\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script id= \"temp_bbs\" type=\"x-handlebars-template\">\r\n");
      out.write("	<table class=\"table table-striped table-bordered mt-3\">\r\n");
      out.write("		<tr class=\"table-dark\" >\r\n");
      out.write("			<td>ID</td>\r\n");
      out.write("			<td>Title</td>\r\n");
      out.write("			<td>Writer</td>\r\n");
      out.write("			<td>Date</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		{{#each .}}\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>{{bid}}</td>\r\n");
      out.write("				<td><a href=\"/bbs/read?bid={{bid}}\">{{title}}</a</td>\r\n");
      out.write("				<td>{{writer}}({{uname}})</td>\r\n");
      out.write("				<td>{{bdate}}</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	if(uid){\r\n");
      out.write("		$(\"#div_write\").show();\r\n");
      out.write("	}else{\r\n");
      out.write("		$(\"#div_write\").hide();\r\n");
      out.write("	}\r\n");
      out.write("	let page=1;\r\n");
      out.write("	const size=10;\r\n");
      out.write("	\r\n");
      out.write("	let query = $(frm.query).val();\r\n");
      out.write("	let key = $(frm.key).val();\r\n");
      out.write("	\r\n");
      out.write("	getData();\r\n");
      out.write("\r\n");
      out.write("	function getData(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/bbs/list.json\",\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			data:{ query, page, size, key },\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				const temp=Handlebars.compile($(\"#temp_bbs\").html());\r\n");
      out.write("				$(\"#div_bbs\").html(temp(data));\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	getTotal();\r\n");
      out.write("	function getTotal(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/bbs/total\",\r\n");
      out.write("			data:{query, key},\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				if(data==0) {\r\n");
      out.write("					alert(\"검색내용이 없습니다.\");\r\n");
      out.write("					$(frm.query).val(\"\");\r\n");
      out.write("				}else{\r\n");
      out.write("					const totalPage=Math.ceil(data/size);\r\n");
      out.write("					$(\"#pagination\").twbsPagination(\"changeTotalPages\", totalPage, page);\r\n");
      out.write("					$(\"#total\").html(\"검색수:\" + data + \"건\")\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(\"#next\").on(\"click\", function () {\r\n");
      out.write("	        page++;\r\n");
      out.write("	        getData();\r\n");
      out.write("	    })\r\n");
      out.write("	    $(\"#prev\").on(\"click\", function () {\r\n");
      out.write("	        page--;\r\n");
      out.write("	        getData();\r\n");
      out.write("	    })\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	$(frm).on(\"submit\", function(e){\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        query = $(frm.query).val();\r\n");
      out.write("        key = $(frm.key).val();\r\n");
      out.write("        getTotal();\r\n");
      out.write("        page=1;\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//페이지네이션 출력\r\n");
      out.write("	   $('#pagination').twbsPagination({\r\n");
      out.write("      totalPages:100, \r\n");
      out.write("      visiblePages: 10, \r\n");
      out.write("      startPage : 1,\r\n");
      out.write("      initiateStartPageClick: false, \r\n");
      out.write("      first:'<i class=\"bi bi-chevron-double-left text-dark\"></i>', \r\n");
      out.write("      prev :'<i class=\"bi bi-chevron-left text-dark\"></i>',\r\n");
      out.write("      next :'<i class=\"bi bi-chevron-right text-dark\"></i>',\r\n");
      out.write("      last :'<i class=\"bi bi-chevron-double-right text-dark\"></i>',\r\n");
      out.write("      onPageClick: function (event, clickPage) {\r\n");
      out.write("          page=clickPage; \r\n");
      out.write("          getData();\r\n");
      out.write("      }\r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
