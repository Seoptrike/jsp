/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-03 10:09:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" <style>\r\n");
      out.write("	#fphoto{\r\n");
      out.write("		border-radius:50%;\r\n");
      out.write("		border : 1px solid black;\r\n");
      out.write("	}\r\n");
      out.write("</style>   \r\n");
      out.write("    \r\n");
      out.write("<div>\r\n");
      out.write("	<h1> 사용자 목록 </h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class = \"row my-3 justify-content-end\">\r\n");
      out.write("		<div class=\"col-8 col-md-4 col-lg-4\">\r\n");
      out.write("			<form name=\"frm\">\r\n");
      out.write("				<div class=\"input-group\">\r\n");
      out.write("					<select class=\"mx-1\" name=\"key\" id=\"select\">\r\n");
      out.write("                    	<option value=\"uname\">이름</option>\r\n");
      out.write("                    	<option value=\"uid\">아이디</option>\r\n");
      out.write("               		</select>\r\n");
      out.write("					<input class=\"form=control\" name=\"query\" value=\"\" placeholder=\"검색어를 입력하세요.\">\r\n");
      out.write("					<button class=\"btn btn-success\">검색</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"div_user\"></div>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"text-center my-3\">\r\n");
      out.write("    <button class=\"btn btn-danger\" id=\"prev\">이전</button>\r\n");
      out.write("    <span class=\"mx-3\" id=\"page\">1</span>\r\n");
      out.write("    <button class=\"btn btn-primary\" id=\"next\">다음</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script id=\"temp_user\" type=\"x-handlebars-template\">\r\n");
      out.write("		{{#each .}}\r\n");
      out.write("			<div class=\"card mb-2 mx-5\">\r\n");
      out.write("			<div class=\"row card-body align-items-center\">\r\n");
      out.write("				<div class=\"col-3 col-md-2\">\r\n");
      out.write("					<img id=\"fphoto\" src=\"{{check photo}}\" width=150 height=150/>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<div>{{uname}} ({{uid}})</div>\r\n");
      out.write("					<div>전화:{{phone}}</div>\r\n");
      out.write("					<div>주소: {{address1}} {{address2}}</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		{{/each}}\r\n");
      out.write("	</script>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	let page = 1;\r\n");
      out.write("	let query = $(frm.query).val();\r\n");
      out.write("	\r\n");
      out.write("	getData();\r\n");
      out.write("	function getData() {\r\n");
      out.write("	    const key=$(frm.key).val();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/user/list.json\",\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			data:{query},\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				const temp = Handlebars.compile($(\"#temp_user\").html());\r\n");
      out.write("				$(\"#div_user\").html(temp(data));\r\n");
      out.write("				$('#total').html(data.total+\"개가 검색되었습니다.\");\r\n");
      out.write("                const last = Math.ceil(data.total /size);\r\n");
      out.write("                $(\"#page\").html(`<b>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${last}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</b>`);\r\n");
      out.write("                if (page == 1) {\r\n");
      out.write("                    $(\"#prev\").attr(\"disabled\", true);\r\n");
      out.write("                } else {\r\n");
      out.write("                    $(\"#prev\").attr(\"disabled\", false);\r\n");
      out.write("                }\r\n");
      out.write("                if (page == last) {\r\n");
      out.write("                    $(\"#next\").attr(\"disabled\", true);\r\n");
      out.write("                } else {\r\n");
      out.write("                    $(\"#next\").attr(\"disabled\", false);\r\n");
      out.write("                }\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	 $(frm).on(\"submit\",function(e){\r\n");
      out.write("	        e.preventDefault();\r\n");
      out.write("	        if(query==\"\"){\r\n");
      out.write("	            alert(\"검색어를 입력하세요\");\r\n");
      out.write("	        }else{\r\n");
      out.write("	            getData();\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("Handlebars.registerHelper(\"check\",function(photo){\r\n");
      out.write("    if(photo){\r\n");
      out.write("        return photo;\r\n");
      out.write("    }else{\r\n");
      out.write("        return \"http://via.placeholder.com/130x100\";\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
